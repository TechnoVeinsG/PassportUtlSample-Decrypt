I. 名称
　非対称鍵ジェネレータ および 暗号文を復号するサンプル

II. 説明
　PassportUtlに関する次の処理を行う方法を示すサンプルプログラムです
　・暗号化されたファイルを復号する方法

　1. 暗号化について
　　PassportUtlでは、データを暗号化する際にAES方式を用いております
　　しかしAES方式は対称鍵の暗号化技術であるため、安全に鍵を交換する方法が難しいという問題点があります
　　この問題点を克服するために各データ毎に対称鍵生成し、その鍵を非対称鍵の暗号化技術であるRSA方式で暗号化して提供しています
　　さらに、暗号化された鍵とデータをZip形式の書庫ファイルにまとめることで可搬性を向上させています

　2. プログラム開発について
　　1) 参照の追加
　　　Zip形式の書庫ファイルを操作するために以下の参照を追加する必要があります
　　　・System.IO.Compression
　　　・System.IO.Compression.FileSystem

　　2) 公開鍵ファイルについて
　　　PassportUtlで使用しているライブラリは Visual Studio に標準添付のものを利用しております
　　　そのため、公開鍵ファイルはXML形式になります
　　　一般的なOpenSSL形式などではありませんのでご注意ください

　　3) 秘密鍵ファイルについて
　　　本プログラムでは秘密鍵の格納先としてキーコンテナを利用しています
　　　通常は問題ありませんが、マシンを移行する場合などは秘密鍵も移行する必要があります
　　　その移行方法として、 https://github.com/TechnoVeinsG/Cryptography_Export_Inport に示すサンプルを参考にプログラムを作成することを検討してください

　　4) その他
　　　本プログラムは処理の概要を簡潔に示すことを目的としているため、エラー処理など割愛している部分が多くあります
　　　本プログラムを参考にして開発される際は、ご注意ください

　3. 使い方
　　1) キーコンテナ名を入力する
　　2) 「復号する」ボタンを押す
　　3) 暗号文ファイルを選択する
　　4) 「開く」ボタンを押す
　　暗号文ファイルと同じフォルダに復号されたファイルが作成されます

III. 環境
　本プログラムは、以下の環境にて開発しております
　・Windows 10 pro
　・Visual Srudio 2012
　・.NET Framework 4.5
　・C#

IV. 著作者
　テクノベインズ株式会社

V. ライセンス
　MIT ライセンス
